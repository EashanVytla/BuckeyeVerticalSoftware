void Agent::initTargets(string configPath)
{

    std::ifstream file(configFile);

    if (!file.is_open())
    {
        std::cerr << "Failed to open file." << std::endl;
        return;
    }

    // clear servos vector before repopulating it
    servos.clear();

    detectedSet.clear();
    targetSet.clear();

    std::string line;

    while (std::getline(file, line))
    {
        std::istringstream iss(line);
        Servo servo;

        if (!(iss >> servo.index >> servo.className >> servo.openPosition >> servo.closePosition))
        {
            std::cerr << "Invalid format: " << line << std::endl;
            continue;
        }

        servos.push_back(servo);
    }

    file.close();

    // Printing the config entries
    std::cout << "Config entries extracted from the file:" << std::endl;
    for (const auto &servo : servos)
    {
        std::cout << "servoIndex: " << servo.index << ", Class name: " << servo.className << ", Open Position: " << servo.openPosition << ", Close Position " << servo.closePosition << std::endl;
    }

    // adding to targetSet
    for (int i = 0; i < servos.size(); i++)
        targetSet.insert(servos.at(i).className);
}